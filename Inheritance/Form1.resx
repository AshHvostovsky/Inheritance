<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>239, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAJgoAAAJNU0Z0AUkBTAIBAQMB
        AAE4AQABOAEAARABAAEQAQAD/wEAASEBAAj/AUIBTQE2BwABNgMAASgDAAFAAwABEAMAAQEBAAEgBgAB
        ECIAAyIBMQNOAZgDVwHaAxsB+gMbAfoDVwHaA04BmAMiATEsAANPAZkDTwGZKAADMwFRA1gBtwM6Ae8D
        DgH9A08B4gNQAZ0DHgErYAADBwEJA1ABmgMHAf4DAAH/AwAB/wMHAf4DAAH/AwAB/wMAAf8DBwH+A08B
        mwMHAQkUAANEAXoDJAE0BAADDwETAyUB9wMlAfcDDwETBAADJAE0A0QBehAAAwgBCgNVAa8DAAH/AwAB
        /wMAAf8DAAH/AwAB/wMAAf8DGwH6A0ABb1gAAwcBCQNXAcIDAAH/AwAB/wMAAf8DAAH/AxUBHAM9AWcD
        AAH/AwAB/wMAAf8DAAH/A1cBwgMHAQkQAANUAd4DDgH8A00BkwNPAZkDAAH/AwAB/wNPAZkDTQGTAw4B
        /ANUAd4QAANVAa8DAAH/A1cB1gMxAU4DCQELAwkBCwMxAU4DVwHWAwAB/wMAAf8DOgFgVAADUAGaAwAB
        /wMAAf8DAAH/AwAB/wMAAf8EAAQCA0cB6AMAAf8DAAH/AwAB/wMAAf8DUAGaEAADUgGgAwAB/wMAAf8D
        JQH3A1oByQNaAckDJQH3AwAB/wMAAf8DUgGgDAADMwFRAwAB/wNXAdYDDAEPEAADDAEPA1cB1gMAAf8D
        NgHwAxEBFkwAAyIBMQMHAf4DAAH/AwAB/wMAAf8DAAH/A1YBtggAAy4BRwNFAekDAAH/AwAB/wMAAf8D
        BwH+AyIBMQgAAwYBBwNKAYsDAAH/A04BlQMPARQDIwEyAyMBMgMPARQDTgGVAwAB/wNKAYsDBgEHCAAD
        WAG4AwAB/wMxAU4MAANbAcgIAAMxAU4DAAH/AwAB/wNPAZtMAANOAZgDAAH/AwAB/wMAAf8DAAH/AwAB
        /wMHAQkMAAMfASwDAAH/AwAB/wMAAf8DAAH/A04BmANGAX0DNQHyAwAB/wMAAf8DTgGVAx4BKwNWAdkD
        AAH/AwAB/wNWAdkDHgErA04BlQMAAf8DAAH/AzEB8wNGAX0DOgHvAwAB/wMJAQsYAAMJAQsDAAH/AwAB
        /wMOAf0DIwEySAADVwHaAwAB/wMAAf8DAAH/AwAB/wMAAf8QAAMGAQcDAAH/AwAB/wMAAf8DAAH/A1cB
        2gMgAS4DTwHiAwAB/wMlAfcDDwEUA1YB2QMAAf8DAAH/AwAB/wMAAf8DVgHZAw8BFAMlAfcDAAH/A08B
        4gMgAS4DDgH9AwAB/wMJAQsEAANbAcgDWwHIDAADCQELAwAB/wMAAf8DAAH/A1cBwgQBRAADGwH6AwAB
        /wMAAf8DAAH/AwAB/wNYAbgMAAMGAQcDSgGLAwAB/wMgAfgDPQFoA1ABnQMbAfoEAAMTARkDVwHXA1oB
        yQMjATIDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DIwEyA1oByQNXAdcDEwEZBAADTwHiAwAB/wMxAU4E
        AANbAcgDWwHIDAADMQFOAwAB/wMAAf8DAAH/AwAB/wM2AVhEAAMbAfoDAAH/A08B4gNDAXcDIAEuAwQB
        BQM/AW4DSwHnAwAB/wMAAf8DAAH/AwAB/wNTAaoEAANJAYYDGwH6BAADEwEZA1cB1wNaAckDIwEyAwAB
        /wMAAf8DAAH/AwAB/wMAAf8DAAH/AyMBMgNaAckDVwHXAxMBGQQAA1ABnAMAAf8DVwHWAwwBDxAAAwwB
        DwNXAdYDAAH/AwAB/wMAAf8DAAH/A1MB4QMFAQZAAANXAdoDKQH1AxgBIAgAAy4BRwMAAf8DQAHtAw4B
        /QMAAf8DAAH/AwAB/wM2AVgEAANVAa4DVwHaAyABLgNPAeIDAAH/AyUB9wMPARQDVgHZAwAB/wMAAf8D
        AAH/AwAB/wNWAdkDDwEUAyUB9wMAAf8DTwHiAyABLgMeASoDGwH6AwAB/wNXAdYDMQFOAwkBCwMJAQsD
        MQFOA1cB1gMAAf8DAAH/AwAB/wMAAf8DVgHZAzsBZAMCAQNAAANOAZgDNQHyAwsBDgwAAxgBIQMCAQMD
        WAG6AwAB/wMAAf8DAAH/A0gBhAMNAREDMQHzA04BmANGAX0DNQHyAwAB/wMAAf8DTgGVAx4BKwNWAdkD
        AAH/AwAB/wNWAdkDHgErA04BlQMAAf8DAAH/AzEB8wNGAX0EAAM/AW4DAAH/AwAB/wMAAf8DAAH/AwAB
        /wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMVAfsDEgEYRAADIgExAwcB/gNJAYgQAAMtAUUDBwH+AwAB
        /wMAAf8DAAH/AwAB/wMsAfQDBwH+AyIBMQgAAwYBBwNKAYsDAAH/A04BlQMPARQDIwEyAyMBMgMPARQD
        TgGVAwAB/wNKAYsDBgEHEAADOQFfAzoB7wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB
        /wMAAf8DQwF2SAADTwGbAw4B/QM1AVYMAAMrAUIDDgH9AwAB/wMAAf8DAAH/AwAB/wMAAf8DTwGbEAAD
        UgGgAwAB/wMAAf8DJQH3A1oByQNaAckDJQH3AwAB/wMAAf8DUgGgGAADEQEWA1ABmgMOAf0DAAH/AwAB
        /wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wNXAddIAAMHAQkDVwHCAw4B/QNJAYgDCwEOCAADTgGXAwAB
        /wMAAf8DAAH/AwAB/wNXAcIDBwEJEAADVAHeAw4B/ANNAZMDTwGZAwAB/wMAAf8DTwGZA00BkwMOAfwD
        VAHeIAADIgExA1cBwgMAAf8DAAH/A1YB2QMVAfsDAAH/AwAB/wMAAf8DAAH/AygBO0gAAwcBCQNPAZsD
        BwH+AzUB8gNVAa4DSQGGA1kBxwMAAf8DAAH/AwcB/gNPAZsDBwEJFAADRAF6AyQBNAQAAw8BEwMlAfcD
        JQH3Aw8BEwQAAyQBNANEAXokAAQBAzYBVwNTAeEDOwFkAxIBGANDAXYDVwHXAwAB/wMAAf8DUAGdUAAD
        IgExA04BmANXAdoDGwH6AxsB+gNXAdoDTgGYAyIBMSwAA08BmQNPAZk8AAMFAQYDAgEDDAADKAE7A1AB
        nQNVAdxAAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAB8AEPAf4BfwHgAT8C
        AAHAAQMB5AEnAYABHwIAAYABAQHgAQcBgAEPAgABgQEBAeABBwEPAQcCAAEBAYABwAEDAR0BhwIAAQEB
        wAIAAR8BgwIAAQMBwAIAARMBgQIAAQMCgAEBARMBgQMAAQQBgAEBAQ8DAAEYAQQGAAEcAwABgAEBAgAB
        HgEAAcABAwHAAQECAAGOAQEB4AEHAeABAQIAAYMBAQHgAQcB+AMAAcABAwHkAScB/AMAAfABDwH+AX8B
        /wE4AgAL
</value>
  </data>
</root>